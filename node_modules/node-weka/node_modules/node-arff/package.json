{
  "name": "node-arff",
  "version": "0.0.4",
  "description": "ARFF data file tools",
  "main": "arfftools.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "nodeunit test/test-*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/chesles/node-arff.git"
  },
  "keywords": [
    "arff",
    "machine learning",
    "cs478"
  ],
  "author": {
    "name": "John Chesley",
    "email": "john@chesl.es"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "dependencies": {
    "seed-random": "~2.2.0"
  },
  "devDependencies": {
    "nodeunit": "~0.8.4"
  },
  "readme": "# ARFF Tools for node.js\n\nSee the [WEKA wiki](http://weka.wikispaces.com/ARFF+%28developer+version%29) for\ndetails on the file format.\n\n# Usage\n\nFirst, install node.js and get the `node-arff` NPM module using npm:\n\n    $ npm install node-arff\n\nThen, get yourself an ARFF file (http://axon.cs.byu.edu/data/ has a few) to read.\n\n```javascript\nvar arff = require('node-arff');\n\narff.load('data/some-file.arff', function(err, data) {\n  if (err) {\n    return console.error(err);\n  }\n  // find out some info about the field \"age\"\n  var oldest = data.max('age');\n  var youngest = data.min('age');\n  var mostcommon = data.mode('age');\n  var average = data.mean('age');\n\n  // normalize the data (scale all numeric values so that they are between 0 and 1)\n  data.normalize();\n\n  // randomly sort the data\n  data.randomize();\n})\n```\n",
  "bugs": {
    "url": "https://github.com/chesles/node-arff/issues"
  },
  "homepage": "https://github.com/chesles/node-arff#readme",
  "_id": "node-arff@0.0.4",
  "_from": "node-arff@*"
}
